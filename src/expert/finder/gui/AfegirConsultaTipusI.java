/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package expert.finder.gui;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adri
 */
public class AfegirConsultaTipusI extends javax.swing.JFrame {
    private final ControladorPresentacio controladorPresentacio;

    public AfegirConsultaTipusI(ControladorPresentacio controladorPresentacio) {
        initComponents();
        this.controladorPresentacio = controladorPresentacio;
        this.setLocationRelativeTo(null);
        this.textDescripcio.setText("Sense descripcio");
        inicialitzar_taula_camins();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        textDescripcio = new javax.swing.JTextField();
        bEnrere = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taulaCamins = new javax.swing.JTable();
        bCrear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        taulaNode = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        bActualitzar = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Introdueix la descripcio de la consulta:");

        bEnrere.setText("Enrere");
        bEnrere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnrereActionPerformed(evt);
            }
        });

        taulaCamins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(taulaCamins);

        bCrear.setText("Crear");
        bCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearActionPerformed(evt);
            }
        });

        jLabel2.setText("Camins disponibles");

        taulaNode.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(taulaNode);

        jLabel3.setText("Node Origen");

        bActualitzar.setText("Actualitzar");
        bActualitzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualitzarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textDescripcio, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bEnrere)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bCrear))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bActualitzar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDescripcio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bActualitzar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEnrere)
                    .addComponent(bCrear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bEnrereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnrereActionPerformed
        // TODO add your handling code here:
        new AfegirConsulta(this.controladorPresentacio).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bEnrereActionPerformed

    private void bActualitzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualitzarActionPerformed
        // TODO add your handling code here:
        inicialitzar_taula_nodes();
    }//GEN-LAST:event_bActualitzarActionPerformed

    private void bCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearActionPerformed
        // TODO add your handling code here:
        if (taulaCamins.getSelectedRow() != -1 && taulaNode.getSelectedRow() != -1) {
            String cami = taulaCamins.getModel().getValueAt(taulaCamins.getSelectedRow(), 1).toString();
            String tipusNode = "";
            if (cami.charAt(0) == 'P') tipusNode = "Paper";
            else if (cami.charAt(0) == 'T') tipusNode = "Terme";
            else if (cami.charAt(0) == 'C') tipusNode = "Conferencia";            
            else tipusNode = "Autor";
            
            this.controladorPresentacio.afegir_consulta_tipusI(textDescripcio.getText(), 
                    tipusNode, taulaNode.getSelectedRow(), taulaCamins.getSelectedRow());
            new AfegirConsulta(this.controladorPresentacio).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_bCrearActionPerformed

    private void inicialitzar_taula_camins() {
        String column_names[]= {"Id","Cami","Descripcio", "Clausura"};
        DefaultTableModel table_model=new DefaultTableModel(column_names, 0);
        ArrayList<String> camins = this.controladorPresentacio.get_camins();
        
        for(int i = 0; i < camins.size(); ++i){
            String camiCodificat = camins.get(i);
            
            String cami = camiCodificat.substring(0, camiCodificat.indexOf('|'));
            String descripcio = camiCodificat.substring(camiCodificat.indexOf('|')+1, camiCodificat.length());
            
            table_model.addRow(new Object [] {i+1, cami, descripcio, "Si"});            
        }
        
        taulaCamins.setModel(table_model);
    }
    
    private void inicialitzar_taula_nodes() {
        if (taulaCamins.getSelectedRow() != -1) {
            String column_names[]= {"Id","Nom"};
            DefaultTableModel table_model = new DefaultTableModel(column_names, 0);
            String cami = taulaCamins.getModel().getValueAt(taulaCamins.getSelectedRow(), 1).toString();
            String tipusNode = "";
            if (cami.charAt(0) == 'P') tipusNode = "Paper";
            else if (cami.charAt(0) == 'T') tipusNode = "Terme";
            else if (cami.charAt(0) == 'C') tipusNode = "Conferencia";            
            else tipusNode = "Autor";
            
            ArrayList<String> nodes = controladorPresentacio.get_nodes(tipusNode);        
            for(int i = 0; i < nodes.size(); ++i){
                String node = nodes.get(i);
                String id = node.substring(0, node.indexOf('|'));
                String nom = node.substring(node.indexOf('|')+1, node.length());            
                table_model.addRow(new Object [] {id, nom});
            }

            taulaNode.setModel(table_model);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualitzar;
    private javax.swing.JButton bCrear;
    private javax.swing.JButton bEnrere;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable taulaCamins;
    private javax.swing.JTable taulaNode;
    private javax.swing.JTextField textDescripcio;
    // End of variables declaration//GEN-END:variables
}
